[{"/Users/user/Desktop/React_js_GB/live_chat/src/index.js":"1","/Users/user/Desktop/React_js_GB/live_chat/src/App.js":"2","/Users/user/Desktop/React_js_GB/live_chat/src/components/messageList/messageList.js":"3","/Users/user/Desktop/React_js_GB/live_chat/src/components/inputMess/inputMess.js":"4","/Users/user/Desktop/React_js_GB/live_chat/src/components/author/author.js":"5","/Users/user/Desktop/React_js_GB/live_chat/src/pages/rooms.js":"6","/Users/user/Desktop/React_js_GB/live_chat/src/layouts/messagesRoom.js":"7","/Users/user/Desktop/React_js_GB/live_chat/src/components/roomList/roomList.js":"8","/Users/user/Desktop/React_js_GB/live_chat/src/layouts/roomsMessage.js":"9","/Users/user/Desktop/React_js_GB/live_chat/src/assests/teststyled.js":"10"},{"size":197,"mtime":1632152394626,"results":"11","hashOfConfig":"12"},{"size":381,"mtime":1632154644444,"results":"13","hashOfConfig":"12"},{"size":487,"mtime":1631773526615,"results":"14","hashOfConfig":"12"},{"size":775,"mtime":1632055546257,"results":"15","hashOfConfig":"12"},{"size":1289,"mtime":1632055366651,"results":"16","hashOfConfig":"12"},{"size":538,"mtime":1632154778409,"results":"17","hashOfConfig":"12"},{"size":2731,"mtime":1632151230249,"results":"18","hashOfConfig":"12"},{"size":507,"mtime":1632152086347,"results":"19","hashOfConfig":"12"},{"size":413,"mtime":1632152323274,"results":"20","hashOfConfig":"12"},{"size":237,"mtime":1632154044807,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1doini5",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/user/Desktop/React_js_GB/live_chat/src/index.js",[],"/Users/user/Desktop/React_js_GB/live_chat/src/App.js",[],"/Users/user/Desktop/React_js_GB/live_chat/src/components/messageList/messageList.js",[],["45","46"],"/Users/user/Desktop/React_js_GB/live_chat/src/components/inputMess/inputMess.js",[],"/Users/user/Desktop/React_js_GB/live_chat/src/components/author/author.js",[],"/Users/user/Desktop/React_js_GB/live_chat/src/pages/rooms.js",[],"/Users/user/Desktop/React_js_GB/live_chat/src/layouts/messagesRoom.js",["47","48"],"import React, {useEffect, useState} from 'react';\n\nimport MessageList from \"../components/messageList/messageList\";\nimport Author from \"../components/author/author\";\nimport InputMess from \"../components/inputMess/inputMess\";\nimport {Card, CardActionArea, CardHeader,} from \"@material-ui/core\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nfunction MessagesRoom(){\n    const [idCount, setIdCount] = useState(3)\n    const [author, setAuthor] = useState('default')\n    const [showInput, setShowInput] = useState(false)\n    const [myHeader, setMyHeader] = useState('HomeWork3')\n    const [messageList, setMessageList] = useState(\n        [\n            {\n                id:1,\n                author:'tester',\n                text:'im push test text',\n                time: '1:30:45'\n            },\n            {\n                id:2,\n                author:'tester',\n                text:'im push test text2',\n                time: '1:30:46'\n            }\n        ]\n    )\n\n    const hanlePusherMessage = (messageItem, flag=true) => {\n        let test\n        setIdCount((idCount)=>idCount+1)\n        if (flag){\n            test =  {\n                id: idCount,\n                author: author,\n                text: messageItem,\n                time: Date().toLocaleString().split(\" \")[4]\n            }\n        } else {\n            test = {\n                id: idCount,\n                author: \"ROBOT\",\n                text: messageItem,\n                time: Date().toLocaleString().split(\" \")[4]\n            }\n        }\n        setMessageList(messageList => [...messageList, test])\n    }\n    const handleSetAuthor = (author) => {\n        setAuthor(author)\n        setShowInput((showInput)=>!showInput)\n    }\n\n    const robot = () =>{\n        hanlePusherMessage(\"INPUT YOUR NIKNAME\", false)\n        setShowInput((showInput)=>!showInput)\n    }\n\n    const checkerDefAuthor = (last_message) => {\n        if (last_message.author === 'default'){\n            setTimeout(robot, 1500)\n        }\n    }\n\n    useEffect(()=>{\n        checkerDefAuthor(messageList[messageList.length-1])\n\n    },[messageList])\n\n\n    return(\n        <>\n            <Card sx={{ maxWidth: 400 }} >\n                <CardHeader>\n                    <h4>{myHeader}</h4>\n                </CardHeader>\n                <CardContent>\n                    <MessageList messageArr={messageList}/>\n                </CardContent>\n                <CardActionArea>\n                    <Author stateInput={showInput} handleSumbitAuthor={handleSetAuthor}/>\n                    <InputMess changeFunc={\n                        hanlePusherMessage\n                    }/>\n                </CardActionArea>\n\n            </Card>\n        </>\n    )\n}\nexport default MessagesRoom;","/Users/user/Desktop/React_js_GB/live_chat/src/components/roomList/roomList.js",[],"/Users/user/Desktop/React_js_GB/live_chat/src/layouts/roomsMessage.js",["49"],"import React from \"react\";\nimport {useState} from 'react'\nimport RoomList from \"../components/roomList/roomList\";\n\nfunction RoomsMessage(){\n    // const [roomsList, setRoomsList] = useState([{id:1, name: 'testRoom1'} , {id:2, name: 'testRoom3'}])\n    const roomsList = [{id:1, name: 'testRoom1'} , {id:2, name: 'testRoom3'}]\n    return(\n        <RoomList roomArr={roomsList}/>\n    )\n}\nexport default RoomsMessage;","/Users/user/Desktop/React_js_GB/live_chat/src/assests/teststyled.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":13,"column":22,"nodeType":"56","messageId":"57","endLine":13,"endColumn":33},{"ruleId":"58","severity":1,"message":"59","line":70,"column":7,"nodeType":"60","endLine":70,"endColumn":20,"suggestions":"61"},{"ruleId":"54","severity":1,"message":"62","line":2,"column":9,"nodeType":"56","messageId":"57","endLine":2,"endColumn":17},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'setMyHeader' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkerDefAuthor'. Either include it or remove the dependency array.","ArrayExpression",["65"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [checkerDefAuthor, messageList]",{"range":"68","text":"69"},[2091,2104],"[checkerDefAuthor, messageList]"]